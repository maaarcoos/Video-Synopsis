//console.log(data);
/*

//Luego de ordenar, empieza el codigo llamando a las clases y todo hecho fuera
var scenesList = new Array();
var time= new Date(0,0,0,0,0);//time inicializado en 00:00:00

function insertInScene(obj){
  if(scenesList.length == 0){//Si es la primer Escena
      var scene= new Scene(20,800,480,time);
  }
  else{//Si hay mas escenas
    var i;
    for(i=0;i<scenesList.length;i++){
    }
  }
}
var i;
var blobs;
for(i = 0; i < data.length; i++){
  var j;
  blobs=data[i].lightweight_blobs;
  for(j=0 ; j < blobs.length ; j++){
    insertInScene(blobs[j]);
  }
}
*/
//var FinalList = new Array();


Insert de Scene:

insert(tb) {
  let i = 0;
  tb.setDelay(this.timeInit); //Scene se encarga de setear al nuevo tb el delay inicial, que es igual al comienzo de la escena
  if (this.objects.length < this.objMax) {
    while (i < tb.blobs.length) {
      tb.blobs[i].setTime(tb.delay);
      this.quadtree.insert(tb.blobs[i]);
      if (tb.blobs[i].collision) { //al insert en el quadtree hay que agregar si hay o no colision
        let j = i - 1;
        while (j >= 0) {
          this.quadtree.drop(tb.blobs[j]);
          let x = (tb.blobs[j].time - tb.delay);
          tb.blobs[j].setTime(x);
          j--;
        }
        tb.setDelay(100);
        i = 0;
      } else {
        i++;
      }
    }
    this.objects.push(tb);
    return true;
  }
  return false; //Devuelve si la cantidad de objetos excede la capacidad de la escena
}

/*
    function dateTest() { //funcion para jugar con el objeto Date, ver como funciona y eso
      let i;
      let blob;
      let blobsList = new Array();
      let time = new Date(0, 0, 0, 0, 0);
      for (let i = 0; i < data.length; i++) {
        blob = new Tuple(data[i], time);
        //cambia tiempo de cada tracked blob
        if (blobsList.length == 0) {
          blobsList.push(blob);
        } else {
          blob = new Tuple(data[i], new Date(blobsList[blobsList.length - 1].time));
          //console.log("Antes de setear: " + blobsList[blobsList.length - 1]);
          blob.setTime(10000 + blob.time.getMilliseconds());
          blobsList.push(blob);
          console.log(blobsList[blobsList.length - 1]);
        }
      }
      console.log("Hora: " + blobsList[3].time);
      console.log(blobsList[2].time);
    }
    //datetest();*/
